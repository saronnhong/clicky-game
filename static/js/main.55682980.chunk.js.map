{"version":3,"sources":["components/CharacterCard/index.js","components/Navbar/index.js","App.js","index.js"],"names":["CharacterCard","props","react_default","a","createElement","className","alt","id","src","url","width","Navbar","href","score","App","state","characters","count","handleIncrement","_this","setState","shuffleCards","array","sort","Math","random","_this2","this","components_Navbar","map","character","onClick","components_CharacterCard","process","imageFile","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"45BAceA,MAXf,SAAuBC,GACnB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,EAAMM,GAAIC,IAAKP,EAAMQ,IAAKC,MAAM,0BCQ3CC,MAZf,SAAgBV,GACZ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCAAyCE,GAAG,QACvDL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeO,KAAK,KAAjC,eACAV,EAAAC,EAAAC,cAAA,KAAGG,GAAG,aAAN,UAA0BN,EAAMY,OAChCX,EAAAC,EAAAC,cAAA,KAAGG,GAAG,aAAN,oBC8CDO,6MAvCbC,MAAQ,CAENC,aACAC,MAAO,KAITC,gBAAkB,WAEhBC,EAAKC,SAAS,CAAEH,MAAOE,EAAKJ,MAAME,MAAQ,OAG5CI,aAAe,SAACC,GACdA,EAAMC,KAAK,kBAAMC,KAAKC,SAAW,8EAG1B,IAAAC,EAAAC,KACP,OACEzB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwB,EAAD,CAAQf,MAAOc,KAAKZ,MAAME,QAC1Bf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAGbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZsB,KAAKZ,MAAMC,WAAWa,IAAI,SAAAC,GAAS,OAClC5B,EAAAC,EAAAC,cAAA,KAAG2B,QAASL,EAAKR,iBACfhB,EAAAC,EAAAC,cAAC4B,EAAD,CACEzB,GAAIuB,EAAUvB,GACdE,IAAKwB,oBAAmCH,EAAUI,yBArClDC,aCDlBC,IAASC,OAAOnC,EAAAC,EAAAC,cAACkC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.55682980.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction CharacterCard(props) {\n    return (\n        <div className=\"card\">\n            <div className=\"img-container\">\n                <img alt={props.id} src={props.url} width=\"200px\" />\n            </div>\n           \n        </div>\n    );\n}\n\nexport default CharacterCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Navbar(props) {\n    return (\n        <nav className=\"navbar navbar-dark bg-dark transparent\" id=\"nav1\">\n            <div className=\"justify-content-left\">\n                <a className=\"navbar-brand\" href=\"/\">Clicky Game</a>\n                <a id=\"scoreText\">Score: {props.score}</a>\n                <a id=\"scoreText\"> High Score: </a>\n            </div>\n        </nav>\n    );\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport CharacterCard from \"./components/CharacterCard\";\n\n// import Counter from \"./components/Counter\";\nimport characters from \"./characters.json\";\nimport Navbar from \"./components/Navbar\";\n\nclass App extends Component {\n  // removeFriend = id => {\n  //   // Filter this.state.friends for friends with an id not equal to the id being removed\n  //   const friends = this.state.friends.filter(friend => friend.id !== id);\n  //   // Set this.state.friends equal to the new friends array\n  //   this.setState({ friends });\n  // };\n\n  // Setting the initial state of the Counter component\n  state = {\n    // count: 0\n    characters,\n    count: 0\n  };\n\n  // handleIncrement increases this.state.count by 1\n  handleIncrement = () => {\n    // We always use the setState method to update a component's state\n    this.setState({ count: this.state.count + 1 });\n  };\n\n  shuffleCards = (array) => {\n    array.sort(() => Math.random() - 0.5);\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar score={this.state.count}/>\n        <div className=\"container\">\n          {/* <p className=\"card-text\">Score: {this.state.count}</p> */}\n\n          <div className=\"row\">\n            {this.state.characters.map(character => (\n              <a onClick={this.handleIncrement}>\n                <CharacterCard\n                  id={character.id}\n                  url={process.env.PUBLIC_URL + '/img/' + character.imageFile}\n                />\n              </a>\n            ))}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}