{"version":3,"sources":["components/CharacterCard/index.js","components/Navbar/index.js","App.js","index.js"],"names":["CharacterCard","props","react_default","a","createElement","className","id","src","url","width","alt","Navbar","href","score","highScore","shuffleCards","array","sort","Math","random","clickedArray","App","state","characters","count","checkIfClicked","num","i","length","_this","setState","alert","push","handleIncrement","event","targetId","target","console","log","_this2","this","components_Navbar","map","character","onClick","components_CharacterCard","process","imageFile","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"45BAceA,MAXf,SAAuBC,GACnB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKE,GAAIL,EAAMK,GAAIC,IAAKN,EAAMO,IAAKC,MAAM,QAAQC,IAAI,iCCQtDC,MAZf,SAAgBV,GACZ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCAAyCC,GAAG,QACvDJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeO,KAAK,KAAjC,eACAV,EAAAC,EAAAC,cAAA,KAAGE,GAAG,aAAN,UAA0BL,EAAMY,OAChCX,EAAAC,EAAAC,cAAA,KAAGE,GAAG,aAAN,gBAAgCL,EAAMa,cCFlDC,EAAe,SAACC,GAClB,OAAOA,EAAMC,KAAK,kBAAMC,KAAKC,SAAW,MAItCC,EAAe,GA+DJC,6MA3DbC,MAAQ,CAENC,aACAC,MAAO,EACPV,UAAW,EACXR,GAAI,QAGNmB,eAAiB,SAACC,EAAKV,GACrB,IAAK,IAAIW,EAAI,EAAGA,EAAIX,EAAMY,OAAQD,IAChC,GAAID,IAAQV,EAAMW,GAOhB,OANGE,EAAKP,MAAME,MAAQK,EAAKP,MAAMR,WAC/Be,EAAKC,SAAS,CAAEhB,UAAWe,EAAKP,MAAME,QAExCK,EAAKC,SAAS,CAAEN,MAAO,IACvBR,EAAMY,OAAO,OACbG,MAAM,aAIVF,EAAKC,SAAS,CAAEN,MAAOK,EAAKP,MAAME,MAAQ,IAC1CR,EAAMgB,KAAKN,GACXX,EAAaQ,MAGfU,gBAAkB,SAACC,GACjB,IAAMC,EAAWD,EAAME,OAAO9B,GAC9B+B,QAAQC,IAAIH,GAEZE,QAAQC,IAAIlB,GACZS,EAAKJ,eAAeU,EAAUf,4EAQvB,IAAAmB,EAAAC,KACP,OACEtC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqC,EAAD,CAAQ5B,MAAO2B,KAAKlB,MAAME,MAAOV,UAAW0B,KAAKlB,MAAMR,YACvDZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZmC,KAAKlB,MAAMC,WAAWmB,IAAI,SAAAC,GAAS,OAClCzC,EAAAC,EAAAC,cAAA,KAAGwC,QAASL,EAAKN,iBACf/B,EAAAC,EAAAC,cAACyC,EAAD,CACEvC,GAAIqC,EAAUrC,GACdE,IAAKsC,oBAAmCH,EAAUI,yBAnDlDC,aCPlBC,IAASC,OAAOhD,EAAAC,EAAAC,cAAC+C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.e7deb06c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction CharacterCard(props) {\n    return (\n        <div className=\"card\">\n            <div className=\"img-container\">\n                <img id={props.id} src={props.url} width=\"200px\" alt=\"mikeland_img\"/>\n            </div>\n           \n        </div>\n    );\n}\n\nexport default CharacterCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Navbar(props) {\n    return (\n        <nav className=\"navbar navbar-dark bg-dark transparent\" id=\"nav1\">\n            <div className=\"justify-content-left\">\n                <a className=\"navbar-brand\" href=\"/\">Clicky Game</a>\n                <a id=\"scoreText\">Score: {props.score}</a>\n                <a id=\"scoreText\"> High Score: {props.highScore}</a>\n            </div>\n        </nav>\n    );\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport CharacterCard from \"./components/CharacterCard\";\n\n// import Counter from \"./components/Counter\";\nimport characters from \"./characters.json\";\nimport Navbar from \"./components/Navbar\";\n\nvar shuffleCards = (array) => {\n  return array.sort(() => Math.random() - 0.5);\n};\n\n\nvar clickedArray = [];\nclass App extends Component {\n\n\n  state = {\n    // count: 0\n    characters,\n    count: 0,\n    highScore: 0,\n    id: null\n  };\n\n  checkIfClicked = (num, array) => {\n    for (let i = 0; i < array.length; i++) {\n      if (num === array[i]) {\n        if(this.state.count > this.state.highScore){\n          this.setState({ highScore: this.state.count});\n        }\n        this.setState({ count: 0 });\n        array.length=0;\n        alert(\"You Lose!\");\n        return;\n      } \n    }\n    this.setState({ count: this.state.count + 1 });\n    array.push(num);\n    shuffleCards(characters);\n  }\n\n  handleIncrement = (event) => {\n    const targetId = event.target.id;\n    console.log(targetId);\n    // clickedArray.push(targetId);\n    console.log(clickedArray);\n    this.checkIfClicked(targetId, clickedArray);\n    // this.setState({ count: this.state.count + 1 });\n    // shuffleCards(characters);\n  };\n\n\n\n\n  render() {\n    return (\n      <div>\n        <Navbar score={this.state.count} highScore={this.state.highScore}/>\n        <div className=\"container\">\n          <div className=\"row\">\n            {this.state.characters.map(character => (\n              <a onClick={this.handleIncrement}>\n                <CharacterCard\n                  id={character.id}\n                  url={process.env.PUBLIC_URL + '/img/' + character.imageFile}\n                />\n              </a>\n            ))}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}